/*
 * generated by Xtext 2.14.0
 */
grammar InternalRdfMapping;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.zazuko.experimental.rmdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.zazuko.experimental.rmdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.zazuko.experimental.rmdsl.services.RdfMappingGrammarAccess;

}

@parser::members {

 	private RdfMappingGrammarAccess grammarAccess;

    public InternalRdfMappingParser(TokenStream input, RdfMappingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Domainmodel";
   	}

   	@Override
   	protected RdfMappingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainmodelRule()); }
	iv_ruleDomainmodel=ruleDomainmodel
	{ $current=$iv_ruleDomainmodel.current; }
	EOF;

// Rule Domainmodel
ruleDomainmodel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDomainmodelAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDomainmodelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"com.zazuko.experimental.rmdsl.RdfMapping.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getSourceGroupParserRuleCall_0());
		}
		this_SourceGroup_0=ruleSourceGroup
		{
			$current = $this_SourceGroup_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getLogicalSourceParserRuleCall_1());
		}
		this_LogicalSource_1=ruleLogicalSource
		{
			$current = $this_LogicalSource_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getPrefixHolderParserRuleCall_2());
		}
		this_PrefixHolder_2=rulePrefixHolder
		{
			$current = $this_PrefixHolder_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getMappingParserRuleCall_3());
		}
		this_Mapping_3=ruleMapping
		{
			$current = $this_Mapping_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getImportParserRuleCall_4());
		}
		this_Import_4=ruleImport
		{
			$current = $this_Import_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getSourceTypesDefinitionParserRuleCall_5());
		}
		this_SourceTypesDefinition_5=ruleSourceTypesDefinition
		{
			$current = $this_SourceTypesDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getLanguageTagDefinitionParserRuleCall_6());
		}
		this_LanguageTagDefinition_6=ruleLanguageTagDefinition
		{
			$current = $this_LanguageTagDefinition_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSourceTypesDefinition
entryRuleSourceTypesDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceTypesDefinitionRule()); }
	iv_ruleSourceTypesDefinition=ruleSourceTypesDefinition
	{ $current=$iv_ruleSourceTypesDefinition.current; }
	EOF;

// Rule SourceTypesDefinition
ruleSourceTypesDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='source-types'
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSourceTypesDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceTypesDefinitionAccess().getTypesSourceTypeParserRuleCall_3_0());
				}
				lv_types_3_0=ruleSourceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceTypesDefinitionRule());
					}
					add(
						$current,
						"types",
						lv_types_3_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.SourceType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSourceTypesDefinitionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSourceType
entryRuleSourceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceTypeRule()); }
	iv_ruleSourceType=ruleSourceType
	{ $current=$iv_ruleSourceType.current; }
	EOF;

// Rule SourceType
ruleSourceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSourceTypeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='referenceFormulation'
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceTypeAccess().getReferenceFormulationKeyword_1());
		}
		(
			(
				lv_referenceFormulation_2_0=RULE_STRING
				{
					newLeafNode(lv_referenceFormulation_2_0, grammarAccess.getSourceTypeAccess().getReferenceFormulationSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceTypeRule());
					}
					setWithLastConsumed(
						$current,
						"referenceFormulation",
						lv_referenceFormulation_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDatatypesDefinition
entryRuleDatatypesDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatatypesDefinitionRule()); }
	iv_ruleDatatypesDefinition=ruleDatatypesDefinition
	{ $current=$iv_ruleDatatypesDefinition.current; }
	EOF;

// Rule DatatypesDefinition
ruleDatatypesDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDatatypesDefinitionAccess().getDatatypesDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='datatypes'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatatypesDefinitionAccess().getDatatypesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatatypesDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatatypesDefinitionAccess().getPrefixPrefixParserRuleCall_3_0());
				}
				lv_prefix_3_0=rulePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatatypesDefinitionRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_3_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.Prefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDatatypesDefinitionAccess().getTypesDatatypeParserRuleCall_4_0());
				}
				lv_types_4_0=ruleDatatype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatatypesDefinitionRule());
					}
					add(
						$current,
						"types",
						lv_types_4_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.Datatype");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDatatypesDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDatatype
entryRuleDatatype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatatypeRule()); }
	iv_ruleDatatype=ruleDatatype
	{ $current=$iv_ruleDatatype.current; }
	EOF;

// Rule Datatype
ruleDatatype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDatatypeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDatatypeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleLanguageTagDefinition
entryRuleLanguageTagDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageTagDefinitionRule()); }
	iv_ruleLanguageTagDefinition=ruleLanguageTagDefinition
	{ $current=$iv_ruleLanguageTagDefinition.current; }
	EOF;

// Rule LanguageTagDefinition
ruleLanguageTagDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='language-tags'
		{
			newLeafNode(otherlv_1, grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLanguageTagDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsLanguageTagParserRuleCall_3_0());
				}
				lv_languageTags_3_0=ruleLanguageTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageTagDefinitionRule());
					}
					add(
						$current,
						"languageTags",
						lv_languageTags_3_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.LanguageTag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLanguageTagDefinitionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLanguageTag
entryRuleLanguageTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageTagRule()); }
	iv_ruleLanguageTag=ruleLanguageTag
	{ $current=$iv_ruleLanguageTag.current; }
	EOF;

// Rule LanguageTag
ruleLanguageTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getLanguageTagAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLanguageTagRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleSourceGroup
entryRuleSourceGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceGroupRule()); }
	iv_ruleSourceGroup=ruleSourceGroup
	{ $current=$iv_ruleSourceGroup.current; }
	EOF;

// Rule SourceGroup
ruleSourceGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source-group'
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceGroupAccess().getSourceGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSourceGroupAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSourceGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getSourceGroupAccess().getTypeKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceGroupRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getSourceGroupAccess().getTypeSourceTypeCrossReference_4_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getSourceGroupAccess().getSemicolonKeyword_5());
		}
		(
			otherlv_6='source'
			{
				newLeafNode(otherlv_6, grammarAccess.getSourceGroupAccess().getSourceKeyword_6_0());
			}
			(
				(
					lv_source_7_0=RULE_STRING
					{
						newLeafNode(lv_source_7_0, grammarAccess.getSourceGroupAccess().getSourceSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSourceGroupRule());
						}
						setWithLastConsumed(
							$current,
							"source",
							lv_source_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getSourceGroupAccess().getSemicolonKeyword_6_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceGroupAccess().getLogicalSourcesLogicalSourceParserRuleCall_7_0());
				}
				lv_logicalSources_9_0=ruleLogicalSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceGroupRule());
					}
					add(
						$current,
						"logicalSources",
						lv_logicalSources_9_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.LogicalSource");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSourceGroupAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLogicalSource
entryRuleLogicalSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalSourceRule()); }
	iv_ruleLogicalSource=ruleLogicalSource
	{ $current=$iv_ruleLogicalSource.current; }
	EOF;

// Rule LogicalSource
ruleLogicalSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='logical-source'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicalSourceAccess().getLogicalSourceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogicalSourceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicalSourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getLogicalSourceAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalSourceRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getLogicalSourceAccess().getTypeSourceTypeCrossReference_3_1_0());
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_3_2());
			}
		)?
		(
			otherlv_6='source'
			{
				newLeafNode(otherlv_6, grammarAccess.getLogicalSourceAccess().getSourceKeyword_4_0());
			}
			(
				(
					lv_source_7_0=RULE_STRING
					{
						newLeafNode(lv_source_7_0, grammarAccess.getLogicalSourceAccess().getSourceSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalSourceRule());
						}
						setWithLastConsumed(
							$current,
							"source",
							lv_source_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_4_2());
			}
		)?
		(
			otherlv_9='iterator'
			{
				newLeafNode(otherlv_9, grammarAccess.getLogicalSourceAccess().getIteratorKeyword_5_0());
			}
			(
				(
					lv_iterator_10_0=RULE_STRING
					{
						newLeafNode(lv_iterator_10_0, grammarAccess.getLogicalSourceAccess().getIteratorSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalSourceRule());
						}
						setWithLastConsumed(
							$current,
							"iterator",
							lv_iterator_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_5_2());
			}
		)?
		otherlv_12='referenceables'
		{
			newLeafNode(otherlv_12, grammarAccess.getLogicalSourceAccess().getReferenceablesKeyword_6());
		}
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalSourceAccess().getReferencablesReferenceableParserRuleCall_8_0());
				}
				lv_referencables_14_0=ruleReferenceable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalSourceRule());
					}
					add(
						$current,
						"referencables",
						lv_referencables_14_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.Referenceable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleReferenceable
entryRuleReferenceable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceableRule()); }
	iv_ruleReferenceable=ruleReferenceable
	{ $current=$iv_ruleReferenceable.current; }
	EOF;

// Rule Referenceable
ruleReferenceable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReferenceableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getReferenceableAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceableRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleVocabulary
entryRuleVocabulary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVocabularyRule()); }
	iv_ruleVocabulary=ruleVocabulary
	{ $current=$iv_ruleVocabulary.current; }
	EOF;

// Rule Vocabulary
ruleVocabulary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='vocabulary'
		{
			newLeafNode(otherlv_0, grammarAccess.getVocabularyAccess().getVocabularyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVocabularyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVocabularyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVocabularyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVocabularyAccess().getPrefixPrefixParserRuleCall_3_0());
				}
				lv_prefix_3_0=rulePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVocabularyRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_3_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.Prefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='classes'
			{
				newLeafNode(otherlv_4, grammarAccess.getVocabularyAccess().getClassesKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocabularyAccess().getClassesRdfClassParserRuleCall_4_1_0());
					}
					lv_classes_5_0=ruleRdfClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocabularyRule());
						}
						add(
							$current,
							"classes",
							lv_classes_5_0,
							"com.zazuko.experimental.rmdsl.RdfMapping.RdfClass");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getVocabularyAccess().getSemicolonKeyword_4_2());
			}
		)?
		(
			otherlv_7='properties'
			{
				newLeafNode(otherlv_7, grammarAccess.getVocabularyAccess().getPropertiesKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocabularyAccess().getPropertiesRdfPropertyParserRuleCall_5_1_0());
					}
					lv_properties_8_0=ruleRdfProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocabularyRule());
						}
						add(
							$current,
							"properties",
							lv_properties_8_0,
							"com.zazuko.experimental.rmdsl.RdfMapping.RdfProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getVocabularyAccess().getSemicolonKeyword_5_2());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getVocabularyAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePrefixHolder
entryRulePrefixHolder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixHolderRule()); }
	iv_rulePrefixHolder=rulePrefixHolder
	{ $current=$iv_rulePrefixHolder.current; }
	EOF;

// Rule PrefixHolder
rulePrefixHolder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrefixHolderAccess().getDatatypesDefinitionParserRuleCall_0());
		}
		this_DatatypesDefinition_0=ruleDatatypesDefinition
		{
			$current = $this_DatatypesDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrefixHolderAccess().getVocabularyParserRuleCall_1());
		}
		this_Vocabulary_1=ruleVocabulary
		{
			$current = $this_Vocabulary_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrefix
entryRulePrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixRule()); }
	iv_rulePrefix=rulePrefix
	{ $current=$iv_rulePrefix.current; }
	EOF;

// Rule Prefix
rulePrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prefix'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrefixAccess().getPrefixKeyword_0());
		}
		(
			(
				lv_label_1_0=RULE_STRING
				{
					newLeafNode(lv_label_1_0, grammarAccess.getPrefixAccess().getLabelSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrefixRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_iri_2_0=RULE_STRING
				{
					newLeafNode(lv_iri_2_0, grammarAccess.getPrefixAccess().getIriSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrefixRule());
					}
					setWithLastConsumed(
						$current,
						"iri",
						lv_iri_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrefixAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleRdfProperty
entryRuleRdfProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRdfPropertyRule()); }
	iv_ruleRdfProperty=ruleRdfProperty
	{ $current=$iv_ruleRdfProperty.current; }
	EOF;

// Rule RdfProperty
ruleRdfProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRdfPropertyAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRdfPropertyRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleRdfClass
entryRuleRdfClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRdfClassRule()); }
	iv_ruleRdfClass=ruleRdfClass
	{ $current=$iv_ruleRdfClass.current; }
	EOF;

// Rule RdfClass
ruleRdfClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRdfClassAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRdfClassRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	iv_ruleMapping=ruleMapping
	{ $current=$iv_ruleMapping.current; }
	EOF;

// Rule Mapping
ruleMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMappingAccess().getMapKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getMappingAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMappingAccess().getSourceLogicalSourceCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='use-vocabularies'
			{
				newLeafNode(otherlv_5, grammarAccess.getMappingAccess().getUseVocabulariesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMappingRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMappingAccess().getTargetVocabulariesVocabularyCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_7='subject'
		{
			newLeafNode(otherlv_7, grammarAccess.getMappingAccess().getSubjectKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingAccess().getSubjectIriMappingTemplateValuedTermParserRuleCall_7_0());
				}
				lv_subjectIriMapping_8_0=ruleTemplateValuedTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingRule());
					}
					set(
						$current,
						"subjectIriMapping",
						lv_subjectIriMapping_8_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.TemplateValuedTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='types'
			{
				newLeafNode(otherlv_9, grammarAccess.getMappingAccess().getTypesKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingAccess().getSubjectTypeMappingsSubjectTypeMappingParserRuleCall_8_1_0());
					}
					lv_subjectTypeMappings_10_0=ruleSubjectTypeMapping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingRule());
						}
						add(
							$current,
							"subjectTypeMappings",
							lv_subjectTypeMappings_10_0,
							"com.zazuko.experimental.rmdsl.RdfMapping.SubjectTypeMapping");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_11='properties'
			{
				newLeafNode(otherlv_11, grammarAccess.getMappingAccess().getPropertiesKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingAccess().getPoMappingsPredicateObjectMappingParserRuleCall_9_1_0());
					}
					lv_poMappings_12_0=rulePredicateObjectMapping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingRule());
						}
						add(
							$current,
							"poMappings",
							lv_poMappings_12_0,
							"com.zazuko.experimental.rmdsl.RdfMapping.PredicateObjectMapping");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleSubjectTypeMapping
entryRuleSubjectTypeMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubjectTypeMappingRule()); }
	iv_ruleSubjectTypeMapping=ruleSubjectTypeMapping
	{ $current=$iv_ruleSubjectTypeMapping.current; }
	EOF;

// Rule SubjectTypeMapping
ruleSubjectTypeMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSubjectTypeMappingRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePredicateObjectMapping
entryRulePredicateObjectMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateObjectMappingRule()); }
	iv_rulePredicateObjectMapping=rulePredicateObjectMapping
	{ $current=$iv_rulePredicateObjectMapping.current; }
	EOF;

// Rule PredicateObjectMapping
rulePredicateObjectMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateObjectMappingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPredicateObjectMappingAccess().getTermValuedTermParserRuleCall_1_0());
				}
				lv_term_1_0=ruleValuedTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPredicateObjectMappingRule());
					}
					set(
						$current,
						"term",
						lv_term_1_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.ValuedTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValuedTerm
entryRuleValuedTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedTermRule()); }
	iv_ruleValuedTerm=ruleValuedTerm
	{ $current=$iv_ruleValuedTerm.current; }
	EOF;

// Rule ValuedTerm
ruleValuedTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValuedTermAccess().getReferenceValuedTermParserRuleCall_0());
		}
		this_ReferenceValuedTerm_0=ruleReferenceValuedTerm
		{
			$current = $this_ReferenceValuedTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValuedTermAccess().getTemplateValuedTermParserRuleCall_1());
		}
		this_TemplateValuedTerm_1=ruleTemplateValuedTerm
		{
			$current = $this_TemplateValuedTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValuedTermAccess().getLinkedResourceTermParserRuleCall_2());
		}
		this_LinkedResourceTerm_2=ruleLinkedResourceTerm
		{
			$current = $this_LinkedResourceTerm_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReferenceValuedTerm
entryRuleReferenceValuedTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceValuedTermRule()); }
	iv_ruleReferenceValuedTerm=ruleReferenceValuedTerm
	{ $current=$iv_ruleReferenceValuedTerm.current; }
	EOF;

// Rule ReferenceValuedTerm
ruleReferenceValuedTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='from'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceValuedTermAccess().getFromKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceValuedTermRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getReferenceValuedTermAccess().getReferenceReferenceableCrossReference_1_0());
				}
			)
		)
		(
			(
				otherlv_2='with'
				{
					newLeafNode(otherlv_2, grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_0_0());
				}
				otherlv_3='datatype'
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceValuedTermAccess().getDatatypeKeyword_2_0_1());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceValuedTermRule());
							}
						}
						otherlv_4=RULE_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getReferenceValuedTermAccess().getDatatypeDatatypeCrossReference_2_0_2_0());
						}
					)
				)
			)
			    |
			(
				otherlv_5='with'
				{
					newLeafNode(otherlv_5, grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_1_0());
				}
				otherlv_6='language-tag'
				{
					newLeafNode(otherlv_6, grammarAccess.getReferenceValuedTermAccess().getLanguageTagKeyword_2_1_1());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceValuedTermRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getReferenceValuedTermAccess().getLanguageTagLanguageTagCrossReference_2_1_2_0());
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleTemplateValuedTerm
entryRuleTemplateValuedTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateValuedTermRule()); }
	iv_ruleTemplateValuedTerm=ruleTemplateValuedTerm
	{ $current=$iv_ruleTemplateValuedTerm.current; }
	EOF;

// Rule TemplateValuedTerm
ruleTemplateValuedTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='template'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateValuedTermAccess().getTemplateKeyword_0());
		}
		(
			(
				lv_template_1_0=RULE_STRING
				{
					newLeafNode(lv_template_1_0, grammarAccess.getTemplateValuedTermAccess().getTemplateSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateValuedTermRule());
					}
					setWithLastConsumed(
						$current,
						"template",
						lv_template_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getTemplateValuedTermAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateValuedTermRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTemplateValuedTermAccess().getReferencesReferenceableCrossReference_3_0());
				}
			)
		)+
	)
;

// Entry rule entryRuleLinkedResourceTerm
entryRuleLinkedResourceTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkedResourceTermRule()); }
	iv_ruleLinkedResourceTerm=ruleLinkedResourceTerm
	{ $current=$iv_ruleLinkedResourceTerm.current; }
	EOF;

// Rule LinkedResourceTerm
ruleLinkedResourceTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='link'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkedResourceTermAccess().getLinkKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkedResourceTermRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getLinkedResourceTermAccess().getMappingMappingCrossReference_1_0());
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkedResourceTermAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkedResourceTermRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getLinkedResourceTermAccess().getReferencesReferenceableCrossReference_3_0());
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"com.zazuko.experimental.rmdsl.RdfMapping.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
