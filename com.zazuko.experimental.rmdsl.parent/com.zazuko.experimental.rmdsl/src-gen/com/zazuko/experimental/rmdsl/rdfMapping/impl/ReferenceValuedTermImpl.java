/**
 * generated by Xtext 2.14.0
 */
package com.zazuko.experimental.rmdsl.rdfMapping.impl;

import com.zazuko.experimental.rmdsl.rdfMapping.Datatype;
import com.zazuko.experimental.rmdsl.rdfMapping.LanguageTag;
import com.zazuko.experimental.rmdsl.rdfMapping.RdfMappingPackage;
import com.zazuko.experimental.rmdsl.rdfMapping.ReferenceValuedTerm;
import com.zazuko.experimental.rmdsl.rdfMapping.Referenceable;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reference Valued Term</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.zazuko.experimental.rmdsl.rdfMapping.impl.ReferenceValuedTermImpl#getReference <em>Reference</em>}</li>
 *   <li>{@link com.zazuko.experimental.rmdsl.rdfMapping.impl.ReferenceValuedTermImpl#getDatatype <em>Datatype</em>}</li>
 *   <li>{@link com.zazuko.experimental.rmdsl.rdfMapping.impl.ReferenceValuedTermImpl#getLanguageTag <em>Language Tag</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReferenceValuedTermImpl extends ValuedTermImpl implements ReferenceValuedTerm
{
  /**
   * The cached value of the '{@link #getReference() <em>Reference</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReference()
   * @generated
   * @ordered
   */
  protected Referenceable reference;

  /**
   * The cached value of the '{@link #getDatatype() <em>Datatype</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatatype()
   * @generated
   * @ordered
   */
  protected Datatype datatype;

  /**
   * The cached value of the '{@link #getLanguageTag() <em>Language Tag</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguageTag()
   * @generated
   * @ordered
   */
  protected LanguageTag languageTag;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReferenceValuedTermImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RdfMappingPackage.Literals.REFERENCE_VALUED_TERM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Referenceable getReference()
  {
    if (reference != null && reference.eIsProxy())
    {
      InternalEObject oldReference = (InternalEObject)reference;
      reference = (Referenceable)eResolveProxy(oldReference);
      if (reference != oldReference)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE, oldReference, reference));
      }
    }
    return reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Referenceable basicGetReference()
  {
    return reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReference(Referenceable newReference)
  {
    Referenceable oldReference = reference;
    reference = newReference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE, oldReference, reference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Datatype getDatatype()
  {
    if (datatype != null && datatype.eIsProxy())
    {
      InternalEObject oldDatatype = (InternalEObject)datatype;
      datatype = (Datatype)eResolveProxy(oldDatatype);
      if (datatype != oldDatatype)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE, oldDatatype, datatype));
      }
    }
    return datatype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Datatype basicGetDatatype()
  {
    return datatype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDatatype(Datatype newDatatype)
  {
    Datatype oldDatatype = datatype;
    datatype = newDatatype;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE, oldDatatype, datatype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LanguageTag getLanguageTag()
  {
    if (languageTag != null && languageTag.eIsProxy())
    {
      InternalEObject oldLanguageTag = (InternalEObject)languageTag;
      languageTag = (LanguageTag)eResolveProxy(oldLanguageTag);
      if (languageTag != oldLanguageTag)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG, oldLanguageTag, languageTag));
      }
    }
    return languageTag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LanguageTag basicGetLanguageTag()
  {
    return languageTag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLanguageTag(LanguageTag newLanguageTag)
  {
    LanguageTag oldLanguageTag = languageTag;
    languageTag = newLanguageTag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG, oldLanguageTag, languageTag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE:
        if (resolve) return getReference();
        return basicGetReference();
      case RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE:
        if (resolve) return getDatatype();
        return basicGetDatatype();
      case RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG:
        if (resolve) return getLanguageTag();
        return basicGetLanguageTag();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE:
        setReference((Referenceable)newValue);
        return;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE:
        setDatatype((Datatype)newValue);
        return;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG:
        setLanguageTag((LanguageTag)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE:
        setReference((Referenceable)null);
        return;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE:
        setDatatype((Datatype)null);
        return;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG:
        setLanguageTag((LanguageTag)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RdfMappingPackage.REFERENCE_VALUED_TERM__REFERENCE:
        return reference != null;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__DATATYPE:
        return datatype != null;
      case RdfMappingPackage.REFERENCE_VALUED_TERM__LANGUAGE_TAG:
        return languageTag != null;
    }
    return super.eIsSet(featureID);
  }

} //ReferenceValuedTermImpl
