/*
 * generated by Xtext 2.14.0
 */
grammar InternalRdfMapping;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.zazuko.experimental.rmdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.zazuko.experimental.rmdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.zazuko.experimental.rmdsl.services.RdfMappingGrammarAccess;

}
@parser::members {
	private RdfMappingGrammarAccess grammarAccess;

	public void setGrammarAccess(RdfMappingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
		(rule__Domainmodel__ElementsAssignment)*
		{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceTypesDefinition
entryRuleSourceTypesDefinition
:
{ before(grammarAccess.getSourceTypesDefinitionRule()); }
	 ruleSourceTypesDefinition
{ after(grammarAccess.getSourceTypesDefinitionRule()); } 
	 EOF 
;

// Rule SourceTypesDefinition
ruleSourceTypesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceTypesDefinitionAccess().getGroup()); }
		(rule__SourceTypesDefinition__Group__0)
		{ after(grammarAccess.getSourceTypesDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceType
entryRuleSourceType
:
{ before(grammarAccess.getSourceTypeRule()); }
	 ruleSourceType
{ after(grammarAccess.getSourceTypeRule()); } 
	 EOF 
;

// Rule SourceType
ruleSourceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceTypeAccess().getGroup()); }
		(rule__SourceType__Group__0)
		{ after(grammarAccess.getSourceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatatypesDefinition
entryRuleDatatypesDefinition
:
{ before(grammarAccess.getDatatypesDefinitionRule()); }
	 ruleDatatypesDefinition
{ after(grammarAccess.getDatatypesDefinitionRule()); } 
	 EOF 
;

// Rule DatatypesDefinition
ruleDatatypesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatatypesDefinitionAccess().getGroup()); }
		(rule__DatatypesDefinition__Group__0)
		{ after(grammarAccess.getDatatypesDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatatype
entryRuleDatatype
:
{ before(grammarAccess.getDatatypeRule()); }
	 ruleDatatype
{ after(grammarAccess.getDatatypeRule()); } 
	 EOF 
;

// Rule Datatype
ruleDatatype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatatypeAccess().getNameAssignment()); }
		(rule__Datatype__NameAssignment)
		{ after(grammarAccess.getDatatypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageTagDefinition
entryRuleLanguageTagDefinition
:
{ before(grammarAccess.getLanguageTagDefinitionRule()); }
	 ruleLanguageTagDefinition
{ after(grammarAccess.getLanguageTagDefinitionRule()); } 
	 EOF 
;

// Rule LanguageTagDefinition
ruleLanguageTagDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageTagDefinitionAccess().getGroup()); }
		(rule__LanguageTagDefinition__Group__0)
		{ after(grammarAccess.getLanguageTagDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageTag
entryRuleLanguageTag
:
{ before(grammarAccess.getLanguageTagRule()); }
	 ruleLanguageTag
{ after(grammarAccess.getLanguageTagRule()); } 
	 EOF 
;

// Rule LanguageTag
ruleLanguageTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageTagAccess().getNameAssignment()); }
		(rule__LanguageTag__NameAssignment)
		{ after(grammarAccess.getLanguageTagAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceGroup
entryRuleSourceGroup
:
{ before(grammarAccess.getSourceGroupRule()); }
	 ruleSourceGroup
{ after(grammarAccess.getSourceGroupRule()); } 
	 EOF 
;

// Rule SourceGroup
ruleSourceGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceGroupAccess().getGroup()); }
		(rule__SourceGroup__Group__0)
		{ after(grammarAccess.getSourceGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalSource
entryRuleLogicalSource
:
{ before(grammarAccess.getLogicalSourceRule()); }
	 ruleLogicalSource
{ after(grammarAccess.getLogicalSourceRule()); } 
	 EOF 
;

// Rule LogicalSource
ruleLogicalSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getGroup()); }
		(rule__LogicalSource__Group__0)
		{ after(grammarAccess.getLogicalSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceable
entryRuleReferenceable
:
{ before(grammarAccess.getReferenceableRule()); }
	 ruleReferenceable
{ after(grammarAccess.getReferenceableRule()); } 
	 EOF 
;

// Rule Referenceable
ruleReferenceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceableAccess().getGroup()); }
		(rule__Referenceable__Group__0)
		{ after(grammarAccess.getReferenceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVocabulary
entryRuleVocabulary
:
{ before(grammarAccess.getVocabularyRule()); }
	 ruleVocabulary
{ after(grammarAccess.getVocabularyRule()); } 
	 EOF 
;

// Rule Vocabulary
ruleVocabulary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVocabularyAccess().getGroup()); }
		(rule__Vocabulary__Group__0)
		{ after(grammarAccess.getVocabularyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefixHolder
entryRulePrefixHolder
:
{ before(grammarAccess.getPrefixHolderRule()); }
	 rulePrefixHolder
{ after(grammarAccess.getPrefixHolderRule()); } 
	 EOF 
;

// Rule PrefixHolder
rulePrefixHolder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixHolderAccess().getAlternatives()); }
		(rule__PrefixHolder__Alternatives)
		{ after(grammarAccess.getPrefixHolderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefix
entryRulePrefix
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixAccess().getGroup()); }
		(rule__Prefix__Group__0)
		{ after(grammarAccess.getPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRdfProperty
entryRuleRdfProperty
:
{ before(grammarAccess.getRdfPropertyRule()); }
	 ruleRdfProperty
{ after(grammarAccess.getRdfPropertyRule()); } 
	 EOF 
;

// Rule RdfProperty
ruleRdfProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRdfPropertyAccess().getNameAssignment()); }
		(rule__RdfProperty__NameAssignment)
		{ after(grammarAccess.getRdfPropertyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRdfClass
entryRuleRdfClass
:
{ before(grammarAccess.getRdfClassRule()); }
	 ruleRdfClass
{ after(grammarAccess.getRdfClassRule()); } 
	 EOF 
;

// Rule RdfClass
ruleRdfClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRdfClassAccess().getNameAssignment()); }
		(rule__RdfClass__NameAssignment)
		{ after(grammarAccess.getRdfClassAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubjectTypeMapping
entryRuleSubjectTypeMapping
:
{ before(grammarAccess.getSubjectTypeMappingRule()); }
	 ruleSubjectTypeMapping
{ after(grammarAccess.getSubjectTypeMappingRule()); } 
	 EOF 
;

// Rule SubjectTypeMapping
ruleSubjectTypeMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeAssignment()); }
		(rule__SubjectTypeMapping__TypeAssignment)
		{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateObjectMapping
entryRulePredicateObjectMapping
:
{ before(grammarAccess.getPredicateObjectMappingRule()); }
	 rulePredicateObjectMapping
{ after(grammarAccess.getPredicateObjectMappingRule()); } 
	 EOF 
;

// Rule PredicateObjectMapping
rulePredicateObjectMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getGroup()); }
		(rule__PredicateObjectMapping__Group__0)
		{ after(grammarAccess.getPredicateObjectMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValuedTerm
entryRuleValuedTerm
:
{ before(grammarAccess.getValuedTermRule()); }
	 ruleValuedTerm
{ after(grammarAccess.getValuedTermRule()); } 
	 EOF 
;

// Rule ValuedTerm
ruleValuedTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuedTermAccess().getAlternatives()); }
		(rule__ValuedTerm__Alternatives)
		{ after(grammarAccess.getValuedTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceValuedTerm
entryRuleReferenceValuedTerm
:
{ before(grammarAccess.getReferenceValuedTermRule()); }
	 ruleReferenceValuedTerm
{ after(grammarAccess.getReferenceValuedTermRule()); } 
	 EOF 
;

// Rule ReferenceValuedTerm
ruleReferenceValuedTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getGroup()); }
		(rule__ReferenceValuedTerm__Group__0)
		{ after(grammarAccess.getReferenceValuedTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemplateValuedTerm
entryRuleTemplateValuedTerm
:
{ before(grammarAccess.getTemplateValuedTermRule()); }
	 ruleTemplateValuedTerm
{ after(grammarAccess.getTemplateValuedTermRule()); } 
	 EOF 
;

// Rule TemplateValuedTerm
ruleTemplateValuedTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemplateValuedTermAccess().getGroup()); }
		(rule__TemplateValuedTerm__Group__0)
		{ after(grammarAccess.getTemplateValuedTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkedResourceTerm
entryRuleLinkedResourceTerm
:
{ before(grammarAccess.getLinkedResourceTermRule()); }
	 ruleLinkedResourceTerm
{ after(grammarAccess.getLinkedResourceTermRule()); } 
	 EOF 
;

// Rule LinkedResourceTerm
ruleLinkedResourceTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkedResourceTermAccess().getGroup()); }
		(rule__LinkedResourceTerm__Group__0)
		{ after(grammarAccess.getLinkedResourceTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getSourceGroupParserRuleCall_0()); }
		ruleSourceGroup
		{ after(grammarAccess.getElementAccess().getSourceGroupParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLogicalSourceParserRuleCall_1()); }
		ruleLogicalSource
		{ after(grammarAccess.getElementAccess().getLogicalSourceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getPrefixHolderParserRuleCall_2()); }
		rulePrefixHolder
		{ after(grammarAccess.getElementAccess().getPrefixHolderParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getMappingParserRuleCall_3()); }
		ruleMapping
		{ after(grammarAccess.getElementAccess().getMappingParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getImportParserRuleCall_4()); }
		ruleImport
		{ after(grammarAccess.getElementAccess().getImportParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSourceTypesDefinitionParserRuleCall_5()); }
		ruleSourceTypesDefinition
		{ after(grammarAccess.getElementAccess().getSourceTypesDefinitionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLanguageTagDefinitionParserRuleCall_6()); }
		ruleLanguageTagDefinition
		{ after(grammarAccess.getElementAccess().getLanguageTagDefinitionParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixHolder__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixHolderAccess().getDatatypesDefinitionParserRuleCall_0()); }
		ruleDatatypesDefinition
		{ after(grammarAccess.getPrefixHolderAccess().getDatatypesDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrefixHolderAccess().getVocabularyParserRuleCall_1()); }
		ruleVocabulary
		{ after(grammarAccess.getPrefixHolderAccess().getVocabularyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuedTermAccess().getReferenceValuedTermParserRuleCall_0()); }
		ruleReferenceValuedTerm
		{ after(grammarAccess.getValuedTermAccess().getReferenceValuedTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValuedTermAccess().getTemplateValuedTermParserRuleCall_1()); }
		ruleTemplateValuedTerm
		{ after(grammarAccess.getValuedTermAccess().getTemplateValuedTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValuedTermAccess().getLinkedResourceTermParserRuleCall_2()); }
		ruleLinkedResourceTerm
		{ after(grammarAccess.getValuedTermAccess().getLinkedResourceTermParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getGroup_2_0()); }
		(rule__ReferenceValuedTerm__Group_2_0__0)
		{ after(grammarAccess.getReferenceValuedTermAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getGroup_2_1()); }
		(rule__ReferenceValuedTerm__Group_2_1__0)
		{ after(grammarAccess.getReferenceValuedTermAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__0__Impl
	rule__SourceTypesDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesDefinitionAction_0()); }
	()
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__1__Impl
	rule__SourceTypesDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesKeyword_1()); }
	'source-types'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__2__Impl
	rule__SourceTypesDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__3__Impl
	rule__SourceTypesDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getTypesAssignment_3()); }
	(rule__SourceTypesDefinition__TypesAssignment_3)*
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getTypesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__0__Impl
	rule__SourceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getNameAssignment_0()); }
	(rule__SourceType__NameAssignment_0)
	{ after(grammarAccess.getSourceTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__1__Impl
	rule__SourceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationKeyword_1()); }
	'referenceFormulation'
	{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationAssignment_2()); }
	(rule__SourceType__ReferenceFormulationAssignment_2)
	{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DatatypesDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__0__Impl
	rule__DatatypesDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getDatatypesDefinitionAction_0()); }
	()
	{ after(grammarAccess.getDatatypesDefinitionAccess().getDatatypesDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__1__Impl
	rule__DatatypesDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getDatatypesKeyword_1()); }
	'datatypes'
	{ after(grammarAccess.getDatatypesDefinitionAccess().getDatatypesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__2__Impl
	rule__DatatypesDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDatatypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__3__Impl
	rule__DatatypesDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getPrefixAssignment_3()); }
	(rule__DatatypesDefinition__PrefixAssignment_3)
	{ after(grammarAccess.getDatatypesDefinitionAccess().getPrefixAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__4__Impl
	rule__DatatypesDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getTypesAssignment_4()); }
	(rule__DatatypesDefinition__TypesAssignment_4)*
	{ after(grammarAccess.getDatatypesDefinitionAccess().getTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatatypesDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatatypesDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDatatypesDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageTagDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageTagDefinition__Group__0__Impl
	rule__LanguageTagDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagDefinitionAction_0()); }
	()
	{ after(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageTagDefinition__Group__1__Impl
	rule__LanguageTagDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsKeyword_1()); }
	'language-tags'
	{ after(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageTagDefinition__Group__2__Impl
	rule__LanguageTagDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageTagDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLanguageTagDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageTagDefinition__Group__3__Impl
	rule__LanguageTagDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsAssignment_3()); }
	(rule__LanguageTagDefinition__LanguageTagsAssignment_3)*
	{ after(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageTagDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageTagDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLanguageTagDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__0__Impl
	rule__SourceGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceGroupKeyword_0()); }
	'source-group'
	{ after(grammarAccess.getSourceGroupAccess().getSourceGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__1__Impl
	rule__SourceGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getNameAssignment_1()); }
	(rule__SourceGroup__NameAssignment_1)
	{ after(grammarAccess.getSourceGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__2__Impl
	rule__SourceGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSourceGroupAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__3__Impl
	rule__SourceGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getSourceGroupAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__4__Impl
	rule__SourceGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getTypeAssignment_4()); }
	(rule__SourceGroup__TypeAssignment_4)
	{ after(grammarAccess.getSourceGroupAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__5__Impl
	rule__SourceGroup__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getGroup_5()); }
	(rule__SourceGroup__Group_5__0)?
	{ after(grammarAccess.getSourceGroupAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__6__Impl
	rule__SourceGroup__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getLogicalSourcesAssignment_6()); }
	(rule__SourceGroup__LogicalSourcesAssignment_6)*
	{ after(grammarAccess.getSourceGroupAccess().getLogicalSourcesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSourceGroupAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceGroup__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group_5__0__Impl
	rule__SourceGroup__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceKeyword_5_0()); }
	'source'
	{ after(grammarAccess.getSourceGroupAccess().getSourceKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceAssignment_5_1()); }
	(rule__SourceGroup__SourceAssignment_5_1)
	{ after(grammarAccess.getSourceGroupAccess().getSourceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__0__Impl
	rule__LogicalSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLogicalSourceKeyword_0()); }
	'logical-source'
	{ after(grammarAccess.getLogicalSourceAccess().getLogicalSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__1__Impl
	rule__LogicalSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getNameAssignment_1()); }
	(rule__LogicalSource__NameAssignment_1)
	{ after(grammarAccess.getLogicalSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__2__Impl
	rule__LogicalSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__3__Impl
	rule__LogicalSource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_3()); }
	(rule__LogicalSource__Group_3__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__4__Impl
	rule__LogicalSource__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_4()); }
	(rule__LogicalSource__Group_4__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__5__Impl
	rule__LogicalSource__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_5()); }
	(rule__LogicalSource__Group_5__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__6__Impl
	rule__LogicalSource__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getReferenceablesKeyword_6()); }
	'referenceables'
	{ after(grammarAccess.getLogicalSourceAccess().getReferenceablesKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__7__Impl
	rule__LogicalSource__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__8__Impl
	rule__LogicalSource__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getReferencablesAssignment_8()); }
	(rule__LogicalSource__ReferencablesAssignment_8)*
	{ after(grammarAccess.getLogicalSourceAccess().getReferencablesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__9__Impl
	rule__LogicalSource__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_3__0__Impl
	rule__LogicalSource__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getTypeKeyword_3_0()); }
	'type'
	{ after(grammarAccess.getLogicalSourceAccess().getTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getTypeAssignment_3_1()); }
	(rule__LogicalSource__TypeAssignment_3_1)
	{ after(grammarAccess.getLogicalSourceAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_4__0__Impl
	rule__LogicalSource__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSourceKeyword_4_0()); }
	'source'
	{ after(grammarAccess.getLogicalSourceAccess().getSourceKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSourceAssignment_4_1()); }
	(rule__LogicalSource__SourceAssignment_4_1)
	{ after(grammarAccess.getLogicalSourceAccess().getSourceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_5__0__Impl
	rule__LogicalSource__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getIteratorKeyword_5_0()); }
	'iterator'
	{ after(grammarAccess.getLogicalSourceAccess().getIteratorKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getIteratorAssignment_5_1()); }
	(rule__LogicalSource__IteratorAssignment_5_1)
	{ after(grammarAccess.getLogicalSourceAccess().getIteratorAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Referenceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Referenceable__Group__0__Impl
	rule__Referenceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceableAccess().getNameAssignment_0()); }
	(rule__Referenceable__NameAssignment_0)
	{ after(grammarAccess.getReferenceableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Referenceable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceableAccess().getValueAssignment_1()); }
	(rule__Referenceable__ValueAssignment_1)?
	{ after(grammarAccess.getReferenceableAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__0__Impl
	rule__Vocabulary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getVocabularyKeyword_0()); }
	'vocabulary'
	{ after(grammarAccess.getVocabularyAccess().getVocabularyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__1__Impl
	rule__Vocabulary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getNameAssignment_1()); }
	(rule__Vocabulary__NameAssignment_1)
	{ after(grammarAccess.getVocabularyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__2__Impl
	rule__Vocabulary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVocabularyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__3__Impl
	rule__Vocabulary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPrefixAssignment_3()); }
	(rule__Vocabulary__PrefixAssignment_3)
	{ after(grammarAccess.getVocabularyAccess().getPrefixAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__4__Impl
	rule__Vocabulary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getGroup_4()); }
	(rule__Vocabulary__Group_4__0)?
	{ after(grammarAccess.getVocabularyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__5__Impl
	rule__Vocabulary__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getGroup_5()); }
	(rule__Vocabulary__Group_5__0)?
	{ after(grammarAccess.getVocabularyAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getVocabularyAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_4__0__Impl
	rule__Vocabulary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getClassesKeyword_4_0()); }
	'classes'
	{ after(grammarAccess.getVocabularyAccess().getClassesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getClassesAssignment_4_1()); }
	(rule__Vocabulary__ClassesAssignment_4_1)*
	{ after(grammarAccess.getVocabularyAccess().getClassesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_5__0__Impl
	rule__Vocabulary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPropertiesKeyword_5_0()); }
	'properties'
	{ after(grammarAccess.getVocabularyAccess().getPropertiesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPropertiesAssignment_5_1()); }
	(rule__Vocabulary__PropertiesAssignment_5_1)*
	{ after(grammarAccess.getVocabularyAccess().getPropertiesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__0__Impl
	rule__Prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getPrefixKeyword_0()); }
	'prefix'
	{ after(grammarAccess.getPrefixAccess().getPrefixKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__1__Impl
	rule__Prefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getLabelAssignment_1()); }
	(rule__Prefix__LabelAssignment_1)
	{ after(grammarAccess.getPrefixAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getIriAssignment_2()); }
	(rule__Prefix__IriAssignment_2)
	{ after(grammarAccess.getPrefixAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMappingAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getNameAssignment_1()); }
	(rule__Mapping__NameAssignment_1)
	{ after(grammarAccess.getMappingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getMappingAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSourceAssignment_3()); }
	(rule__Mapping__SourceAssignment_3)
	{ after(grammarAccess.getMappingAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
	rule__Mapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getGroup_5()); }
	(rule__Mapping__Group_5__0)?
	{ after(grammarAccess.getMappingAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__6__Impl
	rule__Mapping__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSubjectKeyword_6()); }
	'subject'
	{ after(grammarAccess.getMappingAccess().getSubjectKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__7__Impl
	rule__Mapping__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSubjectIriMappingAssignment_7()); }
	(rule__Mapping__SubjectIriMappingAssignment_7)
	{ after(grammarAccess.getMappingAccess().getSubjectIriMappingAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__8__Impl
	rule__Mapping__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getGroup_8()); }
	(rule__Mapping__Group_8__0)?
	{ after(grammarAccess.getMappingAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__9__Impl
	rule__Mapping__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getGroup_9()); }
	(rule__Mapping__Group_9__0)?
	{ after(grammarAccess.getMappingAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_5__0__Impl
	rule__Mapping__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getUseVocabulariesKeyword_5_0()); }
	'use-vocabularies'
	{ after(grammarAccess.getMappingAccess().getUseVocabulariesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getTargetVocabulariesAssignment_5_1()); }
		(rule__Mapping__TargetVocabulariesAssignment_5_1)
		{ after(grammarAccess.getMappingAccess().getTargetVocabulariesAssignment_5_1()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getTargetVocabulariesAssignment_5_1()); }
		(rule__Mapping__TargetVocabulariesAssignment_5_1)*
		{ after(grammarAccess.getMappingAccess().getTargetVocabulariesAssignment_5_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_8__0__Impl
	rule__Mapping__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getTypesKeyword_8_0()); }
	'types'
	{ after(grammarAccess.getMappingAccess().getTypesKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_8_1()); }
		(rule__Mapping__SubjectTypeMappingsAssignment_8_1)
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_8_1()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_8_1()); }
		(rule__Mapping__SubjectTypeMappingsAssignment_8_1)*
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_8_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_9__0__Impl
	rule__Mapping__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getPropertiesKeyword_9_0()); }
	'properties'
	{ after(grammarAccess.getMappingAccess().getPropertiesKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsAssignment_9_1()); }
		(rule__Mapping__PoMappingsAssignment_9_1)
		{ after(grammarAccess.getMappingAccess().getPoMappingsAssignment_9_1()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsAssignment_9_1()); }
		(rule__Mapping__PoMappingsAssignment_9_1)*
		{ after(grammarAccess.getMappingAccess().getPoMappingsAssignment_9_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateObjectMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateObjectMapping__Group__0__Impl
	rule__PredicateObjectMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyAssignment_0()); }
	(rule__PredicateObjectMapping__PropertyAssignment_0)
	{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateObjectMapping__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateObjectMappingAccess().getTermAssignment_1()); }
	(rule__PredicateObjectMapping__TermAssignment_1)
	{ after(grammarAccess.getPredicateObjectMappingAccess().getTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceValuedTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group__0__Impl
	rule__ReferenceValuedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getFromKeyword_0()); }
	'from'
	{ after(grammarAccess.getReferenceValuedTermAccess().getFromKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group__1__Impl
	rule__ReferenceValuedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getReferenceAssignment_1()); }
	(rule__ReferenceValuedTerm__ReferenceAssignment_1)
	{ after(grammarAccess.getReferenceValuedTermAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getAlternatives_2()); }
	(rule__ReferenceValuedTerm__Alternatives_2)?
	{ after(grammarAccess.getReferenceValuedTermAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceValuedTerm__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_0__0__Impl
	rule__ReferenceValuedTerm__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_0_0()); }
	'with'
	{ after(grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_0__1__Impl
	rule__ReferenceValuedTerm__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getDatatypeKeyword_2_0_1()); }
	'datatype'
	{ after(grammarAccess.getReferenceValuedTermAccess().getDatatypeKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getDatatypeAssignment_2_0_2()); }
	(rule__ReferenceValuedTerm__DatatypeAssignment_2_0_2)
	{ after(grammarAccess.getReferenceValuedTermAccess().getDatatypeAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceValuedTerm__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_1__0__Impl
	rule__ReferenceValuedTerm__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_1_0()); }
	'with'
	{ after(grammarAccess.getReferenceValuedTermAccess().getWithKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_1__1__Impl
	rule__ReferenceValuedTerm__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getLanguageTagKeyword_2_1_1()); }
	'language-tag'
	{ after(grammarAccess.getReferenceValuedTermAccess().getLanguageTagKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceValuedTerm__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceValuedTermAccess().getLanguageTagAssignment_2_1_2()); }
	(rule__ReferenceValuedTerm__LanguageTagAssignment_2_1_2)
	{ after(grammarAccess.getReferenceValuedTermAccess().getLanguageTagAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateValuedTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateValuedTerm__Group__0__Impl
	rule__TemplateValuedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateValuedTermAccess().getTemplateKeyword_0()); }
	'template'
	{ after(grammarAccess.getTemplateValuedTermAccess().getTemplateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateValuedTerm__Group__1__Impl
	rule__TemplateValuedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateValuedTermAccess().getTemplateAssignment_1()); }
	(rule__TemplateValuedTerm__TemplateAssignment_1)
	{ after(grammarAccess.getTemplateValuedTermAccess().getTemplateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateValuedTerm__Group__2__Impl
	rule__TemplateValuedTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateValuedTermAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getTemplateValuedTermAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateValuedTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTemplateValuedTermAccess().getReferencesAssignment_3()); }
		(rule__TemplateValuedTerm__ReferencesAssignment_3)
		{ after(grammarAccess.getTemplateValuedTermAccess().getReferencesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getTemplateValuedTermAccess().getReferencesAssignment_3()); }
		(rule__TemplateValuedTerm__ReferencesAssignment_3)*
		{ after(grammarAccess.getTemplateValuedTermAccess().getReferencesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedResourceTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkedResourceTerm__Group__0__Impl
	rule__LinkedResourceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkedResourceTermAccess().getLinkKeyword_0()); }
	'link'
	{ after(grammarAccess.getLinkedResourceTermAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkedResourceTerm__Group__1__Impl
	rule__LinkedResourceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkedResourceTermAccess().getMappingAssignment_1()); }
	(rule__LinkedResourceTerm__MappingAssignment_1)
	{ after(grammarAccess.getLinkedResourceTermAccess().getMappingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkedResourceTerm__Group__2__Impl
	rule__LinkedResourceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkedResourceTermAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getLinkedResourceTermAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkedResourceTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLinkedResourceTermAccess().getReferencesAssignment_3()); }
		(rule__LinkedResourceTerm__ReferencesAssignment_3)
		{ after(grammarAccess.getLinkedResourceTermAccess().getReferencesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getLinkedResourceTermAccess().getReferencesAssignment_3()); }
		(rule__LinkedResourceTerm__ReferencesAssignment_3)*
		{ after(grammarAccess.getLinkedResourceTermAccess().getReferencesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getDomainmodelAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypesDefinitionAccess().getTypesSourceTypeParserRuleCall_3_0()); }
		ruleSourceType
		{ after(grammarAccess.getSourceTypesDefinitionAccess().getTypesSourceTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceTypeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__ReferenceFormulationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__PrefixAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypesDefinitionAccess().getPrefixPrefixParserRuleCall_3_0()); }
		rulePrefix
		{ after(grammarAccess.getDatatypesDefinitionAccess().getPrefixPrefixParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatatypesDefinition__TypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypesDefinitionAccess().getTypesDatatypeParserRuleCall_4_0()); }
		ruleDatatype
		{ after(grammarAccess.getDatatypesDefinitionAccess().getTypesDatatypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getDatatypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTagDefinition__LanguageTagsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsLanguageTagParserRuleCall_3_0()); }
		ruleLanguageTag
		{ after(grammarAccess.getLanguageTagDefinitionAccess().getLanguageTagsLanguageTagParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageTag__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageTagAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageTagAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getTypeSourceTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSourceGroupAccess().getTypeSourceTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceGroupAccess().getTypeSourceTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSourceGroupAccess().getTypeSourceTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__SourceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getSourceSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceGroupAccess().getSourceSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__LogicalSourcesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getLogicalSourcesLogicalSourceParserRuleCall_6_0()); }
		ruleLogicalSource
		{ after(grammarAccess.getSourceGroupAccess().getLogicalSourcesLogicalSourceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLogicalSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__SourceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getSourceSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogicalSourceAccess().getSourceSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__IteratorAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getIteratorSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogicalSourceAccess().getIteratorSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__ReferencablesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getReferencablesReferenceableParserRuleCall_8_0()); }
		ruleReferenceable
		{ after(grammarAccess.getLogicalSourceAccess().getReferencablesReferenceableParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceableAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getReferenceableAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVocabularyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__PrefixAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getPrefixPrefixParserRuleCall_3_0()); }
		rulePrefix
		{ after(grammarAccess.getVocabularyAccess().getPrefixPrefixParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__ClassesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getClassesRdfClassParserRuleCall_4_1_0()); }
		ruleRdfClass
		{ after(grammarAccess.getVocabularyAccess().getClassesRdfClassParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__PropertiesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getPropertiesRdfPropertyParserRuleCall_5_1_0()); }
		ruleRdfProperty
		{ after(grammarAccess.getVocabularyAccess().getPropertiesRdfPropertyParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getLabelSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrefixAccess().getLabelSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrefixAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RdfProperty__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRdfPropertyAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRdfPropertyAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RdfClass__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRdfClassAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRdfClassAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSourceLogicalSourceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getSourceLogicalSourceQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMappingAccess().getSourceLogicalSourceQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getSourceLogicalSourceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TargetVocabulariesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getTargetVocabulariesVocabularyCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getTargetVocabulariesVocabularyQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMappingAccess().getTargetVocabulariesVocabularyQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getTargetVocabulariesVocabularyCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SubjectIriMappingAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSubjectIriMappingTemplateValuedTermParserRuleCall_7_0()); }
		ruleTemplateValuedTerm
		{ after(grammarAccess.getMappingAccess().getSubjectIriMappingTemplateValuedTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SubjectTypeMappingsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsSubjectTypeMappingParserRuleCall_8_1_0()); }
		ruleSubjectTypeMapping
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsSubjectTypeMappingParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__PoMappingsAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsPredicateObjectMappingParserRuleCall_9_1_0()); }
		rulePredicateObjectMapping
		{ after(grammarAccess.getMappingAccess().getPoMappingsPredicateObjectMappingParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectTypeMapping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassCrossReference_0()); }
		(
			{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__PropertyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__TermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getTermValuedTermParserRuleCall_1_0()); }
		ruleValuedTerm
		{ after(grammarAccess.getPredicateObjectMappingAccess().getTermValuedTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getReferenceReferenceableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getReferenceValuedTermAccess().getReferenceReferenceableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceValuedTermAccess().getReferenceReferenceableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceValuedTermAccess().getReferenceReferenceableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__DatatypeAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getDatatypeDatatypeCrossReference_2_0_2_0()); }
		(
			{ before(grammarAccess.getReferenceValuedTermAccess().getDatatypeDatatypeIDTerminalRuleCall_2_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceValuedTermAccess().getDatatypeDatatypeIDTerminalRuleCall_2_0_2_0_1()); }
		)
		{ after(grammarAccess.getReferenceValuedTermAccess().getDatatypeDatatypeCrossReference_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValuedTerm__LanguageTagAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceValuedTermAccess().getLanguageTagLanguageTagCrossReference_2_1_2_0()); }
		(
			{ before(grammarAccess.getReferenceValuedTermAccess().getLanguageTagLanguageTagIDTerminalRuleCall_2_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceValuedTermAccess().getLanguageTagLanguageTagIDTerminalRuleCall_2_1_2_0_1()); }
		)
		{ after(grammarAccess.getReferenceValuedTermAccess().getLanguageTagLanguageTagCrossReference_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__TemplateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateValuedTermAccess().getTemplateSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTemplateValuedTermAccess().getTemplateSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateValuedTerm__ReferencesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateValuedTermAccess().getReferencesReferenceableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTemplateValuedTermAccess().getReferencesReferenceableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTemplateValuedTermAccess().getReferencesReferenceableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTemplateValuedTermAccess().getReferencesReferenceableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__MappingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkedResourceTermAccess().getMappingMappingCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLinkedResourceTermAccess().getMappingMappingIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLinkedResourceTermAccess().getMappingMappingIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLinkedResourceTermAccess().getMappingMappingCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedResourceTerm__ReferencesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkedResourceTermAccess().getReferencesReferenceableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getLinkedResourceTermAccess().getReferencesReferenceableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLinkedResourceTermAccess().getReferencesReferenceableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getLinkedResourceTermAccess().getReferencesReferenceableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
