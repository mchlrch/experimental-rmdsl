/*
 * generated by Xtext 2.14.0
 */
grammar InternalRdfMapping;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.zazuko.experimental.rmdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.zazuko.experimental.rmdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.zazuko.experimental.rmdsl.services.RdfMappingGrammarAccess;

}
@parser::members {
	private RdfMappingGrammarAccess grammarAccess;

	public void setGrammarAccess(RdfMappingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
		(rule__Domainmodel__ElementsAssignment)*
		{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceTypesDefinition
entryRuleSourceTypesDefinition
:
{ before(grammarAccess.getSourceTypesDefinitionRule()); }
	 ruleSourceTypesDefinition
{ after(grammarAccess.getSourceTypesDefinitionRule()); } 
	 EOF 
;

// Rule SourceTypesDefinition
ruleSourceTypesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceTypesDefinitionAccess().getGroup()); }
		(rule__SourceTypesDefinition__Group__0)
		{ after(grammarAccess.getSourceTypesDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceType
entryRuleSourceType
:
{ before(grammarAccess.getSourceTypeRule()); }
	 ruleSourceType
{ after(grammarAccess.getSourceTypeRule()); } 
	 EOF 
;

// Rule SourceType
ruleSourceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceTypeAccess().getGroup()); }
		(rule__SourceType__Group__0)
		{ after(grammarAccess.getSourceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceGroup
entryRuleSourceGroup
:
{ before(grammarAccess.getSourceGroupRule()); }
	 ruleSourceGroup
{ after(grammarAccess.getSourceGroupRule()); } 
	 EOF 
;

// Rule SourceGroup
ruleSourceGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceGroupAccess().getGroup()); }
		(rule__SourceGroup__Group__0)
		{ after(grammarAccess.getSourceGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalSource
entryRuleLogicalSource
:
{ before(grammarAccess.getLogicalSourceRule()); }
	 ruleLogicalSource
{ after(grammarAccess.getLogicalSourceRule()); } 
	 EOF 
;

// Rule LogicalSource
ruleLogicalSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getGroup()); }
		(rule__LogicalSource__Group__0)
		{ after(grammarAccess.getLogicalSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceable
entryRuleReferenceable
:
{ before(grammarAccess.getReferenceableRule()); }
	 ruleReferenceable
{ after(grammarAccess.getReferenceableRule()); } 
	 EOF 
;

// Rule Referenceable
ruleReferenceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceableAccess().getGroup()); }
		(rule__Referenceable__Group__0)
		{ after(grammarAccess.getReferenceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVocabulary
entryRuleVocabulary
:
{ before(grammarAccess.getVocabularyRule()); }
	 ruleVocabulary
{ after(grammarAccess.getVocabularyRule()); } 
	 EOF 
;

// Rule Vocabulary
ruleVocabulary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVocabularyAccess().getGroup()); }
		(rule__Vocabulary__Group__0)
		{ after(grammarAccess.getVocabularyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefix
entryRulePrefix
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixAccess().getGroup()); }
		(rule__Prefix__Group__0)
		{ after(grammarAccess.getPrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRdfProperty
entryRuleRdfProperty
:
{ before(grammarAccess.getRdfPropertyRule()); }
	 ruleRdfProperty
{ after(grammarAccess.getRdfPropertyRule()); } 
	 EOF 
;

// Rule RdfProperty
ruleRdfProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRdfPropertyAccess().getNameAssignment()); }
		(rule__RdfProperty__NameAssignment)
		{ after(grammarAccess.getRdfPropertyAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRdfClass
entryRuleRdfClass
:
{ before(grammarAccess.getRdfClassRule()); }
	 ruleRdfClass
{ after(grammarAccess.getRdfClassRule()); } 
	 EOF 
;

// Rule RdfClass
ruleRdfClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRdfClassAccess().getNameAssignment()); }
		(rule__RdfClass__NameAssignment)
		{ after(grammarAccess.getRdfClassAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubjectTypeMapping
entryRuleSubjectTypeMapping
:
{ before(grammarAccess.getSubjectTypeMappingRule()); }
	 ruleSubjectTypeMapping
{ after(grammarAccess.getSubjectTypeMappingRule()); } 
	 EOF 
;

// Rule SubjectTypeMapping
ruleSubjectTypeMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeAssignment()); }
		(rule__SubjectTypeMapping__TypeAssignment)
		{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateObjectMapping
entryRulePredicateObjectMapping
:
{ before(grammarAccess.getPredicateObjectMappingRule()); }
	 rulePredicateObjectMapping
{ after(grammarAccess.getPredicateObjectMappingRule()); } 
	 EOF 
;

// Rule PredicateObjectMapping
rulePredicateObjectMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getGroup()); }
		(rule__PredicateObjectMapping__Group__0)
		{ after(grammarAccess.getPredicateObjectMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getImportParserRuleCall_0()); }
		ruleImport
		{ after(grammarAccess.getElementAccess().getImportParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSourceTypesDefinitionParserRuleCall_1()); }
		ruleSourceTypesDefinition
		{ after(grammarAccess.getElementAccess().getSourceTypesDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSourceGroupParserRuleCall_2()); }
		ruleSourceGroup
		{ after(grammarAccess.getElementAccess().getSourceGroupParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLogicalSourceParserRuleCall_3()); }
		ruleLogicalSource
		{ after(grammarAccess.getElementAccess().getLogicalSourceParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getVocabularyParserRuleCall_4()); }
		ruleVocabulary
		{ after(grammarAccess.getElementAccess().getVocabularyParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getMappingParserRuleCall_5()); }
		ruleMapping
		{ after(grammarAccess.getElementAccess().getMappingParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__0__Impl
	rule__SourceTypesDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesDefinitionAction_0()); }
	()
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__1__Impl
	rule__SourceTypesDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesKeyword_1()); }
	'source-types'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getSourceTypesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__2__Impl
	rule__SourceTypesDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__3__Impl
	rule__SourceTypesDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getTypesAssignment_3()); }
	(rule__SourceTypesDefinition__TypesAssignment_3)*
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getTypesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypesDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypesDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSourceTypesDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__0__Impl
	rule__SourceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getNameAssignment_0()); }
	(rule__SourceType__NameAssignment_0)
	{ after(grammarAccess.getSourceTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__1__Impl
	rule__SourceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationKeyword_1()); }
	'referenceFormulation'
	{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationAssignment_2()); }
	(rule__SourceType__ReferenceFormulationAssignment_2)
	{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__0__Impl
	rule__SourceGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceGroupKeyword_0()); }
	'source-group'
	{ after(grammarAccess.getSourceGroupAccess().getSourceGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__1__Impl
	rule__SourceGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getNameAssignment_1()); }
	(rule__SourceGroup__NameAssignment_1)
	{ after(grammarAccess.getSourceGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__2__Impl
	rule__SourceGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSourceGroupAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__3__Impl
	rule__SourceGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getSourceGroupAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__4__Impl
	rule__SourceGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getTypeAssignment_4()); }
	(rule__SourceGroup__TypeAssignment_4)
	{ after(grammarAccess.getSourceGroupAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__5__Impl
	rule__SourceGroup__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getSourceGroupAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__6__Impl
	rule__SourceGroup__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getGroup_6()); }
	(rule__SourceGroup__Group_6__0)?
	{ after(grammarAccess.getSourceGroupAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__7__Impl
	rule__SourceGroup__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getLogicalSourcesAssignment_7()); }
	(rule__SourceGroup__LogicalSourcesAssignment_7)*
	{ after(grammarAccess.getSourceGroupAccess().getLogicalSourcesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getSourceGroupAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceGroup__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group_6__0__Impl
	rule__SourceGroup__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceKeyword_6_0()); }
	'source'
	{ after(grammarAccess.getSourceGroupAccess().getSourceKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group_6__1__Impl
	rule__SourceGroup__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSourceAssignment_6_1()); }
	(rule__SourceGroup__SourceAssignment_6_1)
	{ after(grammarAccess.getSourceGroupAccess().getSourceAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceGroup__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceGroupAccess().getSemicolonKeyword_6_2()); }
	';'
	{ after(grammarAccess.getSourceGroupAccess().getSemicolonKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__0__Impl
	rule__LogicalSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLogicalSourceKeyword_0()); }
	'logical-source'
	{ after(grammarAccess.getLogicalSourceAccess().getLogicalSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__1__Impl
	rule__LogicalSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getNameAssignment_1()); }
	(rule__LogicalSource__NameAssignment_1)
	{ after(grammarAccess.getLogicalSourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__2__Impl
	rule__LogicalSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__3__Impl
	rule__LogicalSource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_3()); }
	(rule__LogicalSource__Group_3__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__4__Impl
	rule__LogicalSource__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_4()); }
	(rule__LogicalSource__Group_4__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__5__Impl
	rule__LogicalSource__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getGroup_5()); }
	(rule__LogicalSource__Group_5__0)?
	{ after(grammarAccess.getLogicalSourceAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__6__Impl
	rule__LogicalSource__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getReferenceablesKeyword_6()); }
	'referenceables'
	{ after(grammarAccess.getLogicalSourceAccess().getReferenceablesKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__7__Impl
	rule__LogicalSource__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getLogicalSourceAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__8__Impl
	rule__LogicalSource__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getReferencablesAssignment_8()); }
	(rule__LogicalSource__ReferencablesAssignment_8)*
	{ after(grammarAccess.getLogicalSourceAccess().getReferencablesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__9__Impl
	rule__LogicalSource__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getLogicalSourceAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_3__0__Impl
	rule__LogicalSource__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getTypeKeyword_3_0()); }
	'type'
	{ after(grammarAccess.getLogicalSourceAccess().getTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_3__1__Impl
	rule__LogicalSource__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getTypeAssignment_3_1()); }
	(rule__LogicalSource__TypeAssignment_3_1)
	{ after(grammarAccess.getLogicalSourceAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_3_2()); }
	';'
	{ after(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_4__0__Impl
	rule__LogicalSource__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSourceKeyword_4_0()); }
	'source'
	{ after(grammarAccess.getLogicalSourceAccess().getSourceKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_4__1__Impl
	rule__LogicalSource__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSourceAssignment_4_1()); }
	(rule__LogicalSource__SourceAssignment_4_1)
	{ after(grammarAccess.getLogicalSourceAccess().getSourceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_4_2()); }
	';'
	{ after(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSource__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_5__0__Impl
	rule__LogicalSource__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getIteratorKeyword_5_0()); }
	'iterator'
	{ after(grammarAccess.getLogicalSourceAccess().getIteratorKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_5__1__Impl
	rule__LogicalSource__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getIteratorAssignment_5_1()); }
	(rule__LogicalSource__IteratorAssignment_5_1)
	{ after(grammarAccess.getLogicalSourceAccess().getIteratorAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalSource__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_5_2()); }
	';'
	{ after(grammarAccess.getLogicalSourceAccess().getSemicolonKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Referenceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Referenceable__Group__0__Impl
	rule__Referenceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceableAccess().getNameAssignment_0()); }
	(rule__Referenceable__NameAssignment_0)
	{ after(grammarAccess.getReferenceableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Referenceable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceableAccess().getValueAssignment_1()); }
	(rule__Referenceable__ValueAssignment_1)
	{ after(grammarAccess.getReferenceableAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__0__Impl
	rule__Vocabulary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getVocabularyKeyword_0()); }
	'vocabulary'
	{ after(grammarAccess.getVocabularyAccess().getVocabularyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__1__Impl
	rule__Vocabulary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getNameAssignment_1()); }
	(rule__Vocabulary__NameAssignment_1)
	{ after(grammarAccess.getVocabularyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__2__Impl
	rule__Vocabulary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVocabularyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__3__Impl
	rule__Vocabulary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPrefixAssignment_3()); }
	(rule__Vocabulary__PrefixAssignment_3)
	{ after(grammarAccess.getVocabularyAccess().getPrefixAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__4__Impl
	rule__Vocabulary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getGroup_4()); }
	(rule__Vocabulary__Group_4__0)?
	{ after(grammarAccess.getVocabularyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__5__Impl
	rule__Vocabulary__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getGroup_5()); }
	(rule__Vocabulary__Group_5__0)?
	{ after(grammarAccess.getVocabularyAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getVocabularyAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_4__0__Impl
	rule__Vocabulary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getClassesKeyword_4_0()); }
	'classes'
	{ after(grammarAccess.getVocabularyAccess().getClassesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_4__1__Impl
	rule__Vocabulary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getClassesAssignment_4_1()); }
	(rule__Vocabulary__ClassesAssignment_4_1)*
	{ after(grammarAccess.getVocabularyAccess().getClassesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getSemicolonKeyword_4_2()); }
	';'
	{ after(grammarAccess.getVocabularyAccess().getSemicolonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vocabulary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_5__0__Impl
	rule__Vocabulary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPropertiesKeyword_5_0()); }
	'properties'
	{ after(grammarAccess.getVocabularyAccess().getPropertiesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_5__1__Impl
	rule__Vocabulary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getPropertiesAssignment_5_1()); }
	(rule__Vocabulary__PropertiesAssignment_5_1)*
	{ after(grammarAccess.getVocabularyAccess().getPropertiesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vocabulary__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVocabularyAccess().getSemicolonKeyword_5_2()); }
	';'
	{ after(grammarAccess.getVocabularyAccess().getSemicolonKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__0__Impl
	rule__Prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getPrefixKeyword_0()); }
	'prefix'
	{ after(grammarAccess.getPrefixAccess().getPrefixKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__1__Impl
	rule__Prefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getLabelAssignment_1()); }
	(rule__Prefix__LabelAssignment_1)
	{ after(grammarAccess.getPrefixAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__2__Impl
	rule__Prefix__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getIriAssignment_2()); }
	(rule__Prefix__IriAssignment_2)
	{ after(grammarAccess.getPrefixAccess().getIriAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getPrefixAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMappingAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getNameAssignment_1()); }
	(rule__Mapping__NameAssignment_1)
	{ after(grammarAccess.getMappingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getMappingAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSourceAssignment_3()); }
	(rule__Mapping__SourceAssignment_3)
	{ after(grammarAccess.getMappingAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
	rule__Mapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSubjectKeyword_5()); }
	'subject'
	{ after(grammarAccess.getMappingAccess().getSubjectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__6__Impl
	rule__Mapping__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getTemplateKeyword_6()); }
	'template'
	{ after(grammarAccess.getMappingAccess().getTemplateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__7__Impl
	rule__Mapping__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getPatternAssignment_7()); }
	(rule__Mapping__PatternAssignment_7)
	{ after(grammarAccess.getMappingAccess().getPatternAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__8__Impl
	rule__Mapping__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getWithKeyword_8()); }
	'with'
	{ after(grammarAccess.getMappingAccess().getWithKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__9__Impl
	rule__Mapping__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getReferenceAssignment_9()); }
	(rule__Mapping__ReferenceAssignment_9)
	{ after(grammarAccess.getMappingAccess().getReferenceAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__10__Impl
	rule__Mapping__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getGroup_10()); }
	(rule__Mapping__Group_10__0)?
	{ after(grammarAccess.getMappingAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__11__Impl
	rule__Mapping__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getGroup_11()); }
	(rule__Mapping__Group_11__0)?
	{ after(grammarAccess.getMappingAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_10__0__Impl
	rule__Mapping__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getTypesKeyword_10_0()); }
	'types'
	{ after(grammarAccess.getMappingAccess().getTypesKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_10_1()); }
		(rule__Mapping__SubjectTypeMappingsAssignment_10_1)
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_10_1()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_10_1()); }
		(rule__Mapping__SubjectTypeMappingsAssignment_10_1)*
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsAssignment_10_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_11__0__Impl
	rule__Mapping__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getPropertiesKeyword_11_0()); }
	'properties'
	{ after(grammarAccess.getMappingAccess().getPropertiesKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsAssignment_11_1()); }
		(rule__Mapping__PoMappingsAssignment_11_1)
		{ after(grammarAccess.getMappingAccess().getPoMappingsAssignment_11_1()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsAssignment_11_1()); }
		(rule__Mapping__PoMappingsAssignment_11_1)*
		{ after(grammarAccess.getMappingAccess().getPoMappingsAssignment_11_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicateObjectMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateObjectMapping__Group__0__Impl
	rule__PredicateObjectMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyAssignment_0()); }
	(rule__PredicateObjectMapping__PropertyAssignment_0)
	{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateObjectMapping__Group__1__Impl
	rule__PredicateObjectMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateObjectMappingAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getPredicateObjectMappingAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicateObjectMapping__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateObjectMappingAccess().getReferenceAssignment_2()); }
	(rule__PredicateObjectMapping__ReferenceAssignment_2)
	{ after(grammarAccess.getPredicateObjectMappingAccess().getReferenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getDomainmodelAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypesDefinition__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypesDefinitionAccess().getTypesSourceTypeParserRuleCall_3_0()); }
		ruleSourceType
		{ after(grammarAccess.getSourceTypesDefinitionAccess().getTypesSourceTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceTypeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceType__ReferenceFormulationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypeAccess().getReferenceFormulationSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceTypeAccess().getReferenceFormulationSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getTypeSourceTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSourceGroupAccess().getTypeSourceTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSourceGroupAccess().getTypeSourceTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSourceGroupAccess().getTypeSourceTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__SourceAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getSourceSTRINGTerminalRuleCall_6_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceGroupAccess().getSourceSTRINGTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceGroup__LogicalSourcesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceGroupAccess().getLogicalSourcesLogicalSourceParserRuleCall_7_0()); }
		ruleLogicalSource
		{ after(grammarAccess.getSourceGroupAccess().getLogicalSourcesLogicalSourceParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLogicalSourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getLogicalSourceAccess().getTypeSourceTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__SourceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getSourceSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogicalSourceAccess().getSourceSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__IteratorAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getIteratorSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogicalSourceAccess().getIteratorSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSource__ReferencablesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSourceAccess().getReferencablesReferenceableParserRuleCall_8_0()); }
		ruleReferenceable
		{ after(grammarAccess.getLogicalSourceAccess().getReferencablesReferenceableParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Referenceable__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceableAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getReferenceableAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVocabularyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__PrefixAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getPrefixPrefixParserRuleCall_3_0()); }
		rulePrefix
		{ after(grammarAccess.getVocabularyAccess().getPrefixPrefixParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__ClassesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getClassesRdfClassParserRuleCall_4_1_0()); }
		ruleRdfClass
		{ after(grammarAccess.getVocabularyAccess().getClassesRdfClassParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vocabulary__PropertiesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVocabularyAccess().getPropertiesRdfPropertyParserRuleCall_5_1_0()); }
		ruleRdfProperty
		{ after(grammarAccess.getVocabularyAccess().getPropertiesRdfPropertyParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getLabelSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrefixAccess().getLabelSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__IriAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getIriSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrefixAccess().getIriSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RdfProperty__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRdfPropertyAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRdfPropertyAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RdfClass__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRdfClassAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRdfClassAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSourceLogicalSourceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getSourceLogicalSourceQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMappingAccess().getSourceLogicalSourceQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getSourceLogicalSourceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__PatternAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getPatternSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getMappingAccess().getPatternSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ReferenceAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getReferenceReferenceableCrossReference_9_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getReferenceReferenceableQualifiedNameParserRuleCall_9_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMappingAccess().getReferenceReferenceableQualifiedNameParserRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getReferenceReferenceableCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SubjectTypeMappingsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSubjectTypeMappingsSubjectTypeMappingParserRuleCall_10_1_0()); }
		ruleSubjectTypeMapping
		{ after(grammarAccess.getMappingAccess().getSubjectTypeMappingsSubjectTypeMappingParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__PoMappingsAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getPoMappingsPredicateObjectMappingParserRuleCall_11_1_0()); }
		rulePredicateObjectMapping
		{ after(grammarAccess.getMappingAccess().getPoMappingsPredicateObjectMappingParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectTypeMapping__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassCrossReference_0()); }
		(
			{ before(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSubjectTypeMappingAccess().getTypeRdfClassCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__PropertyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPredicateObjectMappingAccess().getPropertyRdfPropertyCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateObjectMapping__ReferenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateObjectMappingAccess().getReferenceReferenceableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPredicateObjectMappingAccess().getReferenceReferenceableQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPredicateObjectMappingAccess().getReferenceReferenceableQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPredicateObjectMappingAccess().getReferenceReferenceableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
